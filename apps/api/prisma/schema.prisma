// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum ReportStatus {
  DRAFT
  SUBMITTED_BY_CLIENT
  CLIENT_NEEDS_CORRECTION
  RECEIVED_BY_FRONTDESK
  FRONTDESK_ON_HOLD
  FRONTDESK_REJECTED
  UNDER_TESTING_REVIEW
  TESTING_ON_HOLD
  TESTING_REJECTED
  UNDER_QA_REVIEW
  QA_NEEDS_CORRECTION
  QA_REJECTED
  UNDER_ADMIN_REVIEW
  ADMIN_NEEDS_CORRECTION
  ADMIN_REJECTED
  APPROVED
  LOCKED
}


model MicroMixReport {
  id                       String       @id @default(cuid())
  reportNumber             Int          @unique
  prefix                   String       @default("M")
  // Header/meta
  client                   String?
  dateSent                 DateTime?
  typeOfTest               String?
  sampleType               String?
  formulaNo                String?
  description              String?
  lotNo                    String?
  manufactureDate          DateTime?
  testSopNo                String?
  dateTested               DateTime?
  preliminaryResults       String?
  preliminaryResultsDate   DateTime?
  dateCompleted            DateTime?

  // TBC/TFC blocks (use String to keep exact printed format e.g., "x 10^1", "CFU/ml")
  tbc_dilution             String?      // e.g., "x 10^1"
  tbc_gram                 String?
  tbc_result               String?
  tbc_spec                 String?
  tmy_dilution             String?
  tmy_gram                 String?
  tmy_result               String?
  tmy_spec                 String?

  // Pathogens as JSON [{ key, label, grams, result, spec }]
  pathogens                Json?

  comments                 String?

  // Sign-off
  testedBy                 String?
  testedDate               DateTime?
  reviewedBy               String?
  reviewedDate             DateTime?

  // Part 11 / control
  status                   ReportStatus @default(DRAFT)
  lockedAt                 DateTime?
  createdBy                String?
  updatedBy                String?
  createdAt                DateTime     @default(now())
  updatedAt                DateTime     @updatedAt
}



enum UserRole {
  SYSTEMADMIN
  ADMIN
  FRONTDESK
  MICRO
  CHEMISTRY
  QA
  CLIENT
}

model User {
  id                 String   @id @default(cuid())
  email              String   @unique
  name               String?
  role               UserRole @default(CLIENT)
  passwordHash       String
  mustChangePassword Boolean  @default(false)
  active             Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt



}

model Sample {
  id         String   @id @default(cuid())
  clientId   String
  sampleCode String   @unique
  sampleType String
  receivedAt DateTime @default(now())
  status     String // received|in_progress|review|reported|archived
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}


